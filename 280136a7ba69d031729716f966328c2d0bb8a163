{
  "comments": [
    {
      "key": {
        "uuid": "a15fb9d2_9c2a3001",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/webhooks/PostTaskTest.java",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1012987
      },
      "writtenOn": "2017-06-08T18:38:38Z",
      "side": 1,
      "message": "[optional] Apart from the number of retries that sometimes is 3, sometime s is 100, the setup of all the test case is duplicated. Create a setup method:\n\n  @Mock\n  private Configuration cfg;\n  @Mock\n  private HttpSession session;\n  @Mock\n  private ScheduledThreadPoolExecutor executor;\n\n  private PostTask task;\n\n  @Before\n  public void setup() {\n    when(cfg.getRetryInterval()).thenReturn(RETRY_INTERVAL);\n    when(cfg.getMaxTries()).thenReturn(MAX_TRIES);\n    task \u003d new PostTask(\n        executor, session, cfg, WEBHOOK_URL, BODY);\n  }\n\n  @Test\n  public void noRescheduleOnSuccess() throws IOException {\n    when(session.post(WEBHOOK_URL, BODY)).thenReturn(OK_RESULT);\n    task.run();\n    verifyZeroInteractions(executor);\n  }\n\n  @Test\n  public void noRescheduleOnNonRecoverableException() throws IOException {\n    when(session.post(WEBHOOK_URL, BODY)).thenThrow(SSLException.class);\n    task.run();\n    verifyZeroInteractions(executor);\n  }\n\n  @Test\n  public void rescheduleOnError() throws IOException {\n    when(session.post(WEBHOOK_URL, BODY)).thenReturn(ERR_RESULT);\n    task.run();\n    verify(executor, times(1)).schedule(task, RETRY_INTERVAL, TimeUnit.MILLISECONDS);\n  }\n\n  @Test\n  public void rescheduleOnRecoverableException() throws IOException {\n    when(session.post(WEBHOOK_URL, BODY)).thenThrow(IOException.class);\n    task.run();\n    verify(executor, times(1)).schedule(task, RETRY_INTERVAL, TimeUnit.MILLISECONDS);\n  }\n\n  @Test\n  public void keepReschedulingMaxTriesTimes() throws IOException {\n    when(session.post(WEBHOOK_URL, BODY)).thenThrow(IOException.class);\n    when(executor.schedule(task, RETRY_INTERVAL, TimeUnit.MILLISECONDS))\n        .then(new Answer\u003cVoid\u003e() {\n          @Override\n          public Void answer(InvocationOnMock invocation) throws Throwable {\n            task.run();\n            return null;\n          }\n        });\n\n    task.run();\n\n    verify(executor, times(MAX_TRIES -1)).schedule(task, RETRY_INTERVAL, TimeUnit.MILLISECONDS);\n  }",
      "revId": "280136a7ba69d031729716f966328c2d0bb8a163",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "de401fb4_f3655a30",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/webhooks/PostTaskTest.java",
        "patchSetId": 3
      },
      "lineNbr": 49,
      "author": {
        "id": 1012987
      },
      "writtenOn": "2017-06-08T18:38:38Z",
      "side": 1,
      "message": "You need to setup the configuration for retry otherwise it is possible there is no rescheduled because it\u0027s not configured.",
      "range": {
        "startLine": 49,
        "startChar": 14,
        "endLine": 49,
        "endChar": 35
      },
      "revId": "280136a7ba69d031729716f966328c2d0bb8a163",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "078630d1_dec259ad",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/webhooks/PostTaskTest.java",
        "patchSetId": 3
      },
      "lineNbr": 63,
      "author": {
        "id": 1012987
      },
      "writtenOn": "2017-06-08T18:38:38Z",
      "side": 1,
      "message": "You need to setup the configuration for retry otherwise it is possible there is no rescheduled because it\u0027s not configured.",
      "range": {
        "startLine": 63,
        "startChar": 14,
        "endLine": 63,
        "endChar": 51
      },
      "revId": "280136a7ba69d031729716f966328c2d0bb8a163",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d368b343_4f3db0d7",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/webhooks/PostTaskTest.java",
        "patchSetId": 3
      },
      "lineNbr": 123,
      "author": {
        "id": 1012987
      },
      "writtenOn": "2017-06-08T18:38:38Z",
      "side": 1,
      "message": "make this variable final otherwise it does not compile, not needed if you apply my comment at line 137 or my file comment",
      "range": {
        "startLine": 123,
        "startChar": 4,
        "endLine": 123,
        "endChar": 17
      },
      "revId": "280136a7ba69d031729716f966328c2d0bb8a163",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "70c5c432_db8ae707",
        "filename": "src/test/java/com/googlesource/gerrit/plugins/webhooks/PostTaskTest.java",
        "patchSetId": 3
      },
      "lineNbr": 137,
      "author": {
        "id": 1012987
      },
      "writtenOn": "2017-06-08T18:38:38Z",
      "side": 1,
      "message": "[optional]no need to spy on you object, just check if task was rescheduled MAX_TRIES -1:\n\nverify(executor, times(MAX_TRIES -1)).schedule(task, RETRY_INTERVAL, TimeUnit.MILLISECONDS);",
      "range": {
        "startLine": 137,
        "startChar": 4,
        "endLine": 137,
        "endChar": 40
      },
      "revId": "280136a7ba69d031729716f966328c2d0bb8a163",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    }
  ]
}
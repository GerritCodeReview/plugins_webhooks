{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "87b8819f_67183ac6",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/webhooks/Configuration.java",
        "patchSetId": 5
      },
      "lineNbr": 25,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2025-04-01T23:50:16Z",
      "side": 1,
      "message": "unrelated?",
      "revId": "f1f51e2bf916380f0b55235536811d585e83e3c4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "503c8102_7540d806",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/webhooks/Configuration.java",
        "patchSetId": 5
      },
      "lineNbr": 25,
      "author": {
        "id": 1012457
      },
      "writtenOn": "2025-04-02T15:46:39Z",
      "side": 1,
      "message": "Yes. I added a new constant and will add more in Icba6bf1d94, so adding one for this seemed right. It is small enough to include in this change.",
      "parentUuid": "87b8819f_67183ac6",
      "revId": "f1f51e2bf916380f0b55235536811d585e83e3c4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b6b4506d_07e56ce2",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/webhooks/RemoteConfig.java",
        "patchSetId": 5
      },
      "lineNbr": 63,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2025-04-01T23:50:16Z",
      "side": 1,
      "message": "It would probably be nice to log an info message if we filter out any events. That way admins can easily correlate a user complaint about \"missing events\" to this feature. If we don\u0027t log, they can still figure it out by looking at the config, so it\u0027s not a big deal if you don\u0027t.",
      "revId": "f1f51e2bf916380f0b55235536811d585e83e3c4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c7f5d3bf_7fe71c13",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/webhooks/RemoteConfig.java",
        "patchSetId": 5
      },
      "lineNbr": 63,
      "author": {
        "id": 1012457
      },
      "writtenOn": "2025-04-02T15:46:39Z",
      "side": 1,
      "message": "This is called every time an event is processed, so adding a log here won\u0027t be appropriate. Like you mentioned, it should be easy enough to figure out based on the config.\n\nIt it be good to not repeat this for each event though. We can attempt that in a follow-up change.",
      "parentUuid": "b6b4506d_07e56ce2",
      "revId": "f1f51e2bf916380f0b55235536811d585e83e3c4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7e59c5a3_5e65895e",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/webhooks/RemoteConfig.java",
        "patchSetId": 5
      },
      "lineNbr": 63,
      "author": {
        "id": 1002666
      },
      "writtenOn": "2025-04-02T16:53:30Z",
      "side": 1,
      "message": "\u003e It it be good to not repeat this for each event though. We can attempt that in a follow-up change.\n\nI was thinking that too. Let\u0027s add the log when we do that.",
      "parentUuid": "c7f5d3bf_7fe71c13",
      "revId": "f1f51e2bf916380f0b55235536811d585e83e3c4",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "At least one maximum vote for label \u0027Code-Review\u0027 is required"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"],"atomExplanations":{"value":{"label:Code-Review=MAX,user=non_uploader":"","label:Code-Review=MIN":""}}}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "f1f51e2bf916380f0b55235536811d585e83e3c4",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Do-Not-Submit",
        "description": {
          "value": "Changes that have DO NOT SUBMIT in their commit message are not submittable."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:false"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\""],"atomExplanations":{"value":{"message:\"^.*(D|d)(O|o) (N|n)(O|o)(T|t) (S|s)(U|u)(B|b)(M|m)(I|i)(T|t).*\"":""}}}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[],"atomExplanations":{"value":null}}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "f1f51e2bf916380f0b55235536811d585e83e3c4",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "No-Unresolved-Comments",
        "description": {
          "value": "Changes that have unresolved comments are not submittable. Unless overriden by adding the hashtag allow-unresolved-comments."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:unresolved"
          }
        },
        "submittabilityExpression": {
          "expressionString": "-has:unresolved"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "hashtag:allow-unresolved-comments"
          }
        },
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:unresolved"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["has:unresolved"],"atomExplanations":{"value":{"has:unresolved":""}}}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-has:unresolved"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[],"atomExplanations":{"value":null}}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"hashtag:allow-unresolved-comments"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[],"atomExplanations":{"value":null}}
      },
      "patchSetCommitId": "f1f51e2bf916380f0b55235536811d585e83e3c4",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval. Using a trusted device is required, see go/gerrit-onboarding#review-enforcement."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforced_gerrit"],"atomExplanations":{"value":{"is:review-enforced_gerrit":""}}}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[],"atomExplanations":{"value":null}}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "f1f51e2bf916380f0b55235536811d585e83e3c4",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "CI result status for build and tests is passing"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "-branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Verified\u003dMAX AND -label:Verified\u003dMIN"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-branch:refs/meta/config"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config"],"atomExplanations":{"value":{"branch:refs/meta/config":""}}}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Verified=MAX AND -label:Verified=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Verified=MAX"],"failingAtoms":["label:Verified=MIN"],"atomExplanations":{"value":{"label:Verified=MAX":"","label:Verified=MIN":""}}}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "f1f51e2bf916380f0b55235536811d585e83e3c4",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Want-Code-Review-From-All",
        "description": {
          "value": "A \u0027Code-Review\u0027 vote is required from all human reviewers (service users that are reviewers are ignored)."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "footer:\"Want-Code-Review: all\" -label:Code-Review\u003e\u003d1,users\u003dhuman_reviewers"
          }
        },
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003e\u003d1,users\u003dhuman_reviewers"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"footer:\"Want-Code-Review: all\" -label:Code-Review>=1,users=human_reviewers"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["footer:\"Want-Code-Review: all\"","label:Code-Review>=1,users=human_reviewers"],"atomExplanations":{"value":{"footer:\"Want-Code-Review: all\"":"","label:Code-Review>=1,users=human_reviewers":""}}}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review>=1,users=human_reviewers"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[],"atomExplanations":{"value":null}}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "f1f51e2bf916380f0b55235536811d585e83e3c4",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}